/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JogosLotoGestorDeSalas;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author bil
 */
public class GSalaGUI extends javax.swing.JFrame {

    /**
     * Creates new form GSalaGUI
     */
    private final int MIN = 1;
    private final int MAX = 90;
    
    private SessaoDeJogoDeLoto sessaoDeJogo;
    public GSalaGUI() {
        
        initComponents();
        sessaoDeJogo = new SessaoDeJogoDeLoto(MIN,MAX);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jListNumerosSorteados = new javax.swing.JScrollPane();
        jListTrueNumerosSorteados = new javax.swing.JList<>();
        jButtonNumerosSorteados = new javax.swing.JButton();
        jLabelNumerosSorteados = new javax.swing.JLabel();
        jPanelHead = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanelApostas = new javax.swing.JPanel();
        jListApostas = new javax.swing.JScrollPane();
        jListTrueApostas = new javax.swing.JList<>();
        jButtonAposta = new javax.swing.JButton();
        jLabelApostas = new javax.swing.JLabel();
        jPanelAtualNumeroSorteado = new javax.swing.JPanel();
        jButtonatuallNumeroSorteado = new javax.swing.JButton();
        jLabelatualNumeroSorteado = new javax.swing.JLabel();
        jLabelBigLabelatualNumeroSorteado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogos De Loto - Gestor de Sala");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jListTrueNumerosSorteados.setBackground(new java.awt.Color(176, 176, 0));
        jListTrueNumerosSorteados.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jListTrueNumerosSorteados.setForeground(new java.awt.Color(0, 1, 0));
        jListTrueNumerosSorteados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListTrueNumerosSorteados.setFocusable(false);
        jListNumerosSorteados.setViewportView(jListTrueNumerosSorteados);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 1, 4);
        jPanel1.add(jListNumerosSorteados, gridBagConstraints);

        jButtonNumerosSorteados.setText("Terminar Jogo");
        jButtonNumerosSorteados.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonNumerosSorteados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNumerosSorteadosActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jButtonNumerosSorteados, gridBagConstraints);

        jLabelNumerosSorteados.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNumerosSorteados.setForeground(new java.awt.Color(0, 1, 0));
        jLabelNumerosSorteados.setText("Números Sorteados:");
        jLabelNumerosSorteados.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelNumerosSorteados.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabelNumerosSorteados, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanelHead.setBackground(new java.awt.Color(51, 0, 204));
        jPanelHead.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelHead.setLayout(new java.awt.GridBagLayout());

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(0, 1, 0));
        jLabelTitulo.setText("Jogo De Loto - Gestor de Sala");
        jPanelHead.add(jLabelTitulo, new java.awt.GridBagConstraints());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 1, 0));
        jLabel2.setText("Sistema de Recompensa para Apostas:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        jPanelHead.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(0, 1, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("apostaFeita + SomaDe_apostas_nao_vencidas / (nº_de_nao_Vencedores + 1)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        jPanelHead.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        getContentPane().add(jPanelHead, gridBagConstraints);

        jPanelApostas.setBackground(new java.awt.Color(0, 153, 102));
        jPanelApostas.setForeground(new java.awt.Color(0, 2, 0));
        jPanelApostas.setLayout(new java.awt.GridBagLayout());

        jListTrueApostas.setBackground(new java.awt.Color(1, 131, 88));
        jListTrueApostas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jListTrueApostas.setForeground(new java.awt.Color(0, 1, 0));
        jListTrueApostas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListTrueApostas.setToolTipText("");
        jListTrueApostas.setFocusable(false);
        jListApostas.setViewportView(jListTrueApostas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 119;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 1, 2);
        jPanelApostas.add(jListApostas, gridBagConstraints);

        jButtonAposta.setText("Adicionar Aposta");
        jButtonAposta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAposta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApostaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        jPanelApostas.add(jButtonAposta, gridBagConstraints);

        jLabelApostas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelApostas.setForeground(new java.awt.Color(0, 1, 0));
        jLabelApostas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelApostas.setText("Apostas:");
        jLabelApostas.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 1, 0);
        jPanelApostas.add(jLabelApostas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelApostas, gridBagConstraints);

        jPanelAtualNumeroSorteado.setBackground(new java.awt.Color(0, 51, 255));
        jPanelAtualNumeroSorteado.setForeground(new java.awt.Color(0, 1, 0));
        jPanelAtualNumeroSorteado.setLayout(new java.awt.GridBagLayout());

        jButtonatuallNumeroSorteado.setText("Sortear Número");
        jButtonatuallNumeroSorteado.setBorder(null);
        jButtonatuallNumeroSorteado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonatuallNumeroSorteado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonatuallNumeroSorteadoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        jPanelAtualNumeroSorteado.add(jButtonatuallNumeroSorteado, gridBagConstraints);

        jLabelatualNumeroSorteado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelatualNumeroSorteado.setForeground(new java.awt.Color(0, 1, 0));
        jLabelatualNumeroSorteado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelatualNumeroSorteado.setText("Número Sorteado:");
        jLabelatualNumeroSorteado.setToolTipText("");
        jLabelatualNumeroSorteado.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelAtualNumeroSorteado.add(jLabelatualNumeroSorteado, gridBagConstraints);

        jLabelBigLabelatualNumeroSorteado.setFont(new java.awt.Font("Tahoma", 0, 140)); // NOI18N
        jLabelBigLabelatualNumeroSorteado.setForeground(new java.awt.Color(0, 1, 0));
        jLabelBigLabelatualNumeroSorteado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBigLabelatualNumeroSorteado.setText("72");
        jLabelBigLabelatualNumeroSorteado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelAtualNumeroSorteado.add(jLabelBigLabelatualNumeroSorteado, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanelAtualNumeroSorteado, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
// referencia https://stackoverflow.com/questions/26685326/clearing-a-jlist
    private void jButtonApostaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApostaActionPerformed
        // TODO add your handling code here:
        modaAddlAposta myDialog = new modaAddlAposta(this, true);
        myDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
//      frame.setSize(560, 200);      
        myDialog.setLocationRelativeTo(null);  
        myDialog.setVisible(true);
        
        if(myDialog.data[0] != null){
  
            sessaoDeJogo.adicionarAposta(Integer.valueOf(myDialog.data[0]), Double.valueOf(myDialog.data[1]));
            DefaultListModel model = new DefaultListModel();
            model.clear();
            
            for(Integer jogadorID : sessaoDeJogo.getApostasFeitas().keySet())
                model.addElement("ID: " + jogadorID + " - Valor:" + sessaoDeJogo.getApostasFeitas().get(jogadorID) );
            jListTrueApostas.setModel(model);
        }
        
    }//GEN-LAST:event_jButtonApostaActionPerformed

    private void jButtonatuallNumeroSorteadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonatuallNumeroSorteadoActionPerformed
        // TODO add your handling code here:
        
        int numRand = randomNum(MIN, MAX);
        if(sessaoDeJogo.sortearNumero(numRand)){
        
            jLabelBigLabelatualNumeroSorteado.setText(String.valueOf(numRand));
            DefaultListModel model = new DefaultListModel();
            model.clear();
            for(int numeroSorteado : sessaoDeJogo.getNumerosSorteados())
                model.addElement(numeroSorteado);
            jListTrueNumerosSorteados.setModel(model);
        }
        
    }//GEN-LAST:event_jButtonatuallNumeroSorteadoActionPerformed

    private void jButtonNumerosSorteadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNumerosSorteadosActionPerformed
        // TODO add your handling code here:
        
        
        if(sessaoDeJogo.getNumerosSorteados().size()<15){
                    JOptionPane.showMessageDialog(this,  "Pelo menos 15 números devem ser sorteados antes de poder terminar o jogo ","Erro!",javax.swing.JOptionPane.INFORMATION_MESSAGE); 
                    return;
        }
   
        String[] opcoes = new String[sessaoDeJogo.getApostasFeitas().keySet().toArray().length+1];
        
        for(int i = 0; i<sessaoDeJogo.getApostasFeitas().keySet().toArray().length;i++)
            opcoes[i] = Integer.toString((Integer)sessaoDeJogo.getApostasFeitas().keySet().toArray()[i]);
        opcoes[sessaoDeJogo.getApostasFeitas().keySet().toArray().length ] = "Mais De Um Vencedor";
        
        
        String resultado = (String)JOptionPane.showInputDialog(null, "Escolha o(s) vencedor(es):", 
                "Jogadores", JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
        
        ArrayList<Integer> vencedores = new ArrayList<>();
        if(resultado == null){
            return;
        }
        else if(resultado.equals(opcoes[sessaoDeJogo.getApostasFeitas().keySet().toArray().length ])){
              resultado = JOptionPane.showInputDialog(null, "Adicione os vencedores separados por espaço!", 
                "Adicione os vencedores", JOptionPane.QUESTION_MESSAGE);
            String[] vencedoresToFilter = resultado.split(" ");
            for(String vencedorToFilter : vencedoresToFilter){
                try{
                    vencedores.add(Integer.parseInt(vencedorToFilter));
                } catch (NumberFormatException e) {
                }
            }
        }
        else
            vencedores.add(Integer.valueOf(resultado));
        
        dispose();
        ModalGameScores myDialog = new ModalGameScores(this, true,sessaoDeJogo.getScores(vencedores));
        myDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

        myDialog.setLocationRelativeTo(null);  
        myDialog.setVisible(true);

        
    }//GEN-LAST:event_jButtonNumerosSorteadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GSalaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GSalaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GSalaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GSalaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                GSalaGUI meuGUI  = new GSalaGUI();
                meuGUI.setLocationRelativeTo(null);
                meuGUI.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAposta;
    private javax.swing.JButton jButtonNumerosSorteados;
    private javax.swing.JButton jButtonatuallNumeroSorteado;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelApostas;
    private javax.swing.JLabel jLabelBigLabelatualNumeroSorteado;
    private javax.swing.JLabel jLabelNumerosSorteados;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelatualNumeroSorteado;
    private javax.swing.JScrollPane jListApostas;
    private javax.swing.JScrollPane jListNumerosSorteados;
    private javax.swing.JList<String> jListTrueApostas;
    private javax.swing.JList<String> jListTrueNumerosSorteados;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelApostas;
    private javax.swing.JPanel jPanelAtualNumeroSorteado;
    private javax.swing.JPanel jPanelHead;
    // End of variables declaration//GEN-END:variables

    private static int randomNum(int min, int max) {
        Random r = new Random();
        return r.nextInt((max - min) + 1) + min;
    }
}

